-# NOTE: preventing defaults in this view makes is rather complicated, but is
-# not all that computationally expensive and is worth the effort. TODO: it
-# would be better to clean this up with helpers, and make it clear again.
- card_expand_limit = 10
- vernacular_card_limit = 3
.desc
  %h2= t(:scientific_names_header)
  %div.uk-grid-small{ uk: { grid: true }, class: 'uk-child-width-expand@s uk-child-width-1-3@m' }
    - @page.sci_names_by_display_status.each do |status, scientific_names|
      - include_rank = status == :preferred
      - include_status = !include_rank
      - include_remarks = include_status
      - batch_of_names = group_sort_names_for_card(scientific_names, include_rank, include_status)
      %div
        .uk-card.uk-card-default
          .uk-card-header
            %h3.uk-card-title= t("scientific_name.status_title.#{status}")
          .uk-card-body.js-name-card-body
            .ui-list
              - batch_of_names.each_with_index do |names, i|
                - next if status == :preferred && names.all? { |n| !n.is_preferred? } # These are almost always bogus.
                = render "resource_names", names: names, status: status, include_rank: include_rank, include_status: include_status, include_remarks: include_remarks, hidden: i >= card_expand_limit
            - if batch_of_names.length > card_expand_limit
              .uk-text-center.uk-margin-top.name-card-arrows
                %i.fa.fa-angle-down.fa-2x.js-name-card-open
                %i.fa.fa-angle-up.fa-2x.js-name-card-close.uk-hidden

  %h2= t(:vernacular_names_header)
  .uk-grid-small.js-name-vern-grid{ uk: { grid: true }, class: 'uk-child-width-1-3@m' }
    - if @page.vernaculars.empty?
      %div
        .uk-card.uk-card-default
          .uk-card-body= t(:page_vernaculars_empty)
    - else
      - vernaculars = sorted_grouped_vernaculars(@page)
      - vernaculars.each_with_index do |val, i|
        - lang = val[:locale_code]
        - names_by_lang = val[:vernaculars]
        - hidden = i >= vernacular_card_limit
        .js-name-card-vern{ 'data-hide': hidden, class: hidden ? "uk-hidden" : "" }
          .uk-card.uk-card-default
            .uk-card-header
              %h3.uk-card-title= language_header(lang)
            .uk-card-body.js-name-card-body
              .ui-list
                - lang_names = names_by_lang.group_by { |n| n.string }.values
                - lang_names.each_with_index do |names_by_string, i|
                  - name_hidden = i >= card_expand_limit
                  .item.js-name-card-item{ class: name_hidden ? "uk-hidden" : "", 'data-hide-on-close': name_hidden}
                    - preferred_name = names_by_string.any? { |n| n.is_preferred? }
                    .header
                      = names_by_string.first.string.html_safe
                      - if preferred_name
                        %span.uk-label.uk-label-primary.uk-float-right.uk-margin-left= t(:name_preferred_label)
                      - else
                        -# TODO: admin OR curator...
                        .uk-float-right
                          = link_to(t("names.prefer"), prefer_vernacular_path(names_by_string.first))
                    .description.uk-text-meta
                      - formatted_names = []
                      - names_by_string.select { |n| n.should_attribute_resource? }.group_by { |n| n.node.resource }.each do |resource, names_by_resource|
                        - str = resource.name
                        - if names_by_resource.any? { |n| n.is_preferred_by_resource and not preferred_name }
                          - str = t(:vernacular_preferred_by_resource, resource: str)
                        - formatted_names << link_to(str, resource)
                      - names_by_string.select { |n| n.should_attribute_user? }.group_by { |n| n.user }.each do |user, names_from_user|
                        - username = user.username.blank? ? t("pages.resource_names.username_missing", user_id: user.id) : user.username
                        - formatted_names << link_to(username, user)
                      = t("pages.resource_names.name_recognized_by", by: formatted_names.to_sentence).html_safe
              - if lang_names.length > card_expand_limit
                .uk-text-center.uk-margin-top.name-card-arrows
                  %i.fa.fa-angle-down.fa-2x.js-name-card-open
                  %i.fa.fa-angle-up.fa-2x.js-name-card-close.uk-hidden

  - if vernaculars && vernaculars.length > vernacular_card_limit
    .uk-margin.uk-text-center
      .a.js-name-more-vern= t("names.show_more_langs", count: vernaculars.length - vernacular_card_limit)
      .a.js-name-less-vern.uk-hidden= t("names.hide_langs", count: vernaculars.length - vernacular_card_limit)
  = render('pages/page_classification')
